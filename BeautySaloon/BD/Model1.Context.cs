//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BeautySaloon.BD
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Category> Category { get; set; }
        public virtual DbSet<Employer> Employer { get; set; }
        public virtual DbSet<EmployeService> EmployeService { get; set; }
        public virtual DbSet<Gender> Gender { get; set; }
        public virtual DbSet<JobTitle> JobTitle { get; set; }
        public virtual DbSet<Order> Order { get; set; }
        public virtual DbSet<OrderService> OrderService { get; set; }
        public virtual DbSet<Service> Service { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<vw_EmployerList> vw_EmployerList { get; set; }
        public virtual DbSet<vw_OrderList> vw_OrderList { get; set; }
        public virtual DbSet<vw_ServicList> vw_ServicList { get; set; }
    
        public virtual int InsertEmploySer(Nullable<int> service, Nullable<int> staff, ObjectParameter idE)
        {
            var serviceParameter = service.HasValue ?
                new ObjectParameter("Service", service) :
                new ObjectParameter("Service", typeof(int));
    
            var staffParameter = staff.HasValue ?
                new ObjectParameter("Staff", staff) :
                new ObjectParameter("Staff", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertEmploySer", serviceParameter, staffParameter, idE);
        }
    
        public virtual int dbo_InsertEmploySer(Nullable<int> service, Nullable<int> staff, ObjectParameter idE)
        {
            var serviceParameter = service.HasValue ?
                new ObjectParameter("Service", service) :
                new ObjectParameter("Service", typeof(int));
    
            var staffParameter = staff.HasValue ?
                new ObjectParameter("Staff", staff) :
                new ObjectParameter("Staff", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dbo_InsertEmploySer", serviceParameter, staffParameter, idE);
        }
    }
}
